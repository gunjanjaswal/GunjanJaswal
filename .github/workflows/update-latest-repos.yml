name: Update README with Latest Repositories

on:
  push:
    branches: [ main ]
  create:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README with latest repos and commits
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Fetch user's latest repositories (sorted by created date for newest repos)
            const { data: repos } = await github.rest.repos.listForUser({
              username: 'gunjanjaswal',
              sort: 'created',
              per_page: 10,
              type: 'owner'
            });
            
            // Filter out forks and get top 3 latest repos
            const latestRepos = repos
              .filter(repo => !repo.fork && !repo.archived)
              .slice(0, 3);
            
            // Fetch latest commits across all repos
            const { data: events } = await github.rest.activity.listPublicEventsForUser({
              username: 'gunjanjaswal',
              per_page: 30
            });
            
            // Filter push events and get latest 3 commits
            const latestCommits = events
              .filter(event => event.type === 'PushEvent')
              .slice(0, 3)
              .map(event => ({
                repo: event.repo.name,
                message: event.payload.commits[0]?.message || 'No commit message',
                url: `https://github.com/${event.repo.name}/commit/${event.payload.commits[0]?.sha}`,
                date: event.created_at
              }));
            
            // Generate Recent Projects HTML
            const projectCards = latestRepos.map(repo => {
              const repoName = repo.name;
              const displayName = repoName
                .replace(/-/g, ' ')
                .replace(/wordpress/gi, 'WordPress')
                .replace(/google/gi, 'Google')
                .replace(/news/gi, 'News')
                .replace(/sitemap/gi, 'Sitemap');
              
              const description = repo.description || `${repoName.replace(/-/g, ' ')} project`;
              
              return `- ðŸš€ **[${displayName}](${repo.html_url})** - ${description}`;
            }).join('\n');
            
            // Generate Latest Commits HTML
            const commitList = latestCommits.map(commit => {
              const repoName = commit.repo.split('/')[1];
              const shortMessage = commit.message.length > 60 ? 
                commit.message.substring(0, 60) + '...' : 
                commit.message;
              
              return `- ðŸ’» **[${repoName}](${commit.url})** - ${shortMessage}`;
            }).join('\n');
            
            // Read current README
            const readmePath = 'README.md';
            let readme = fs.readFileSync(readmePath, 'utf8');
            
            // Update Recent Projects section
            const repoStartMarker = '<!--START_SECTION:recent-repos-->';
            const repoEndMarker = '<!--END_SECTION:recent-repos-->';
            const repoStartIndex = readme.indexOf(repoStartMarker);
            const repoEndIndex = readme.indexOf(repoEndMarker);
            
            if (repoStartIndex !== -1 && repoEndIndex !== -1) {
              const beforeRepos = readme.substring(0, repoStartIndex + repoStartMarker.length);
              const afterRepos = readme.substring(repoEndIndex);
              readme = beforeRepos + '\n' + projectCards + '\n' + afterRepos;
            }
            
            // Update Latest Commits section
            const commitStartMarker = '<!--START_SECTION:latest-commits-->';
            const commitEndMarker = '<!--END_SECTION:latest-commits-->';
            const commitStartIndex = readme.indexOf(commitStartMarker);
            const commitEndIndex = readme.indexOf(commitEndMarker);
            
            if (commitStartIndex !== -1 && commitEndIndex !== -1) {
              const beforeCommits = readme.substring(0, commitStartIndex + commitStartMarker.length);
              const afterCommits = readme.substring(commitEndIndex);
              readme = beforeCommits + '\n' + commitList + '\n' + afterCommits;
            }
            
            // Write updated README
            fs.writeFileSync(readmePath, readme);
            
            console.log('Updated README with latest repositories:', latestRepos.map(r => r.name));
            console.log('Updated README with latest commits:', latestCommits.map(c => c.repo));

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update README with latest repositories and commits"
            git push
          fi
